#####################################################################################
# Copyright 2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service restart
# @description Restart a service using the appropriate method
# @action
# @documentation See [service_action](#service_action) for documentation.
#
# @parameter service_name Name of the service
# 
# @class_prefix service_restart
# @class_parameter service_name

bundle agent service_restart(service_name)
{
  vars:
      "old_class_prefix"         string => canonify("service_restart_${service_name}");

      "args"                      slist => { "${service_name}" };
      "full_class_prefix"        string => canonify("service_restart_${service_name}");
      "class_prefix"             string => string_head("${full_class_prefix}", "1000");

      "full_inner_class_prefix"  string => canonify("${report_data.canonified_directive_id}_service_action_${service_name}_restart");
      "inner_class_prefix"       string => string_head("${full_inner_class_prefix}", "1000");

  classes:
      "should_report"        expression => "${report_data.should_report}";

  methods:
      "disable_reporting_${class_prefix}"
                              usebundle => disable_reporting;
      "restart always"        usebundle => service_restart_if("${service_name}","any");

      "reenable_reporting_${class_prefix}"
                              usebundle => enable_reporting,
                             ifvarclass => "should_report";
      # old_class_prefix in service_restart_if is the same as in service_restart
      "new result classes"    usebundle => _classes_copy("${inner_class_prefix}", "${class_prefix}");

      "report"                usebundle => _log_v3("Restart service ${service_name}", "${service_name}", "${old_class_prefix}", "${class_prefix}", @{args}),
                                comment => "${report_data.directive_id}";
}
